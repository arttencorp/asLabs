name: Backup Diario a Google Drive
on:
  schedule:
    - cron: '30 5 * * *'
  workflow_dispatch: 

jobs:
  backup-database:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      
      - name: Configurar fecha
        id: date
        run: |
          echo "date=$(date +'%Y-%m-%d_%H-%M-%S')" >> $GITHUB_OUTPUT
          echo "date_simple=$(date +'%Y-%m-%d')" >> $GITHUB_OUTPUT
      
      - name: Instalar PostgreSQL Client
        run: |
          sudo apt-get update
          sudo apt-get install -y postgresql-client
      
      - name: Crear backup de Supabase
        id: backup
        env:
          DATABASE_URL: ${{ secrets.SUPABASE_DATABASE_URL }}
        run: |
          echo "Iniciando backup..."
          DB_HOST=$(echo "$DATABASE_URL" | sed -n 's/.*@$[^:]*$:.*/\1/p')
          echo "Host de la BD extraído: $DB_HOST"
          if [ -z "$DB_HOST" ]; then
            echo "ERROR: No se pudo extraer el DB_HOST de la DATABASE_URL."
            exit 1
          fi
          echo "54.163.223.160 $DB_HOST" | sudo tee -a /etc/hosts
          pg_dump "$DATABASE_URL" --no-owner --no-privileges --clean > backup.sql
          tar -czf supabase-backup-${{ steps.date.outputs.date }}.tar.gz backup.sql
          SIZE=$(ls -lh supabase-backup-*.tar.gz | awk '{print $5}')
          echo "size_compressed=$SIZE" >> $GITHUB_OUTPUT
          echo "Backup creado: $SIZE"
      
      - name: Subir backup a GitHub
        uses: actions/upload-artifact@v4
        with:
          name: backup-${{ steps.date.outputs.date }}
          path: supabase-backup-*.tar.gz
          retention-days: 30
      
      - name: Enviar notificación de éxito
        if: success()
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 465
          secure: true
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: Backup Exitoso - ${{ steps.date.outputs.date_simple }}
          to: ${{ secrets.EMAIL_USERNAME }}
          from: GitHub Actions <${{ secrets.EMAIL_USERNAME }}>
          body: |
            El backup se completó exitosamente.
            Tamaño: ${{ steps.backup.outputs.size_compressed }}
            Puedes descargarlo desde GitHub Actions.
      
      - name: Limpiar
        if: always()
        run: rm -f backup.sql *.tar.gz